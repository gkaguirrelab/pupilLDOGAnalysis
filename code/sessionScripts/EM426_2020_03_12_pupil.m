%% EM426_2020_03_12_pupil
%
% The video analysis pre-processing pipeline for an LDOG session.
%
% To define mask bounds, use:
%{
	glintFrameMask = defineCropMask('pupil_LightFlux_left_07.mov','startFrame',100)
	pupilFrameMask = defineCropMask('pupil_LightFlux_left_07.mov','startFrame',100)
%}
% For the glint, put a tight box around the glint. For the pupil, define a
% mask area that safely contains the pupil at its most dilated.
%
% To adjust the other pipeline parameters for a given session, use the
% utility:
%{
    estimatePipelineParamsGUI('pupil_LightFlux_left_07.mov','TOME')
%}
% And select one of the raw data .mov files.
%


%% Session parameters

% Subject and session params.
pathParams.Subject = 'EM426';
pathParams.Date = '2020-03-12';
pathParams.Session = 'session_1';

% The approach and protocol. These shouldn't change much
pathParams.Approach = 'OLApproach_TrialSequenceMR';
pathParams.Protocol = 'MRScotoLDOG';

% The names of the videos to process
videoNameStems = {...
    'pupil_LightFlux_right_01',...
    'pupil_LightFlux_right_02',...
    'pupil_LightFlux_right_03',...
    'pupil_LightFlux_right_04',...
    'pupil_LightFlux_right_05',...
    'pupil_LightFlux_right_06' ...
    'pupil_LightFlux_left_07' ...
    'pupil_LightFlux_left_08' ...
    'pupil_LightFlux_left_09' ...
    'pupil_LightFlux_left_10' ...
    'pupil_LightFlux_left_11' ...
    'pupil_LightFlux_left_12' ...
    };

% Stimulus properties
sets = {[1 2 3 4 5 6],[7 8 9 10 11 12]};
labels = {'pupil_LightFlux_right','pupil_LightFlux_left'};
durations = [504,504];
freqs = [1/12,1/12];

% There is only one audio TTL pulse 
checkCountTRs = 1;



%% Analysis parameters -- RIGHT EYE STIM

% Mask bounds
glintFrameMask = [163   261   230   300];
pupilFrameMask = [115   224   194   256];

sessionKeyValues = {...
    'checkCountTRs', checkCountTRs, ...
    'glintFrameMask',glintFrameMask,...
    'glintGammaCorrection',1,...
    'glintThreshold',0.5,...
    'pupilFrameMask',pupilFrameMask,...
    'pupilRange',[33 41],...
    'pupilCircleThresh',0.0120,...
    'glintPatchRadius',20,...
    'candidateThetas',[3*pi/4],...
    'ellipseTransparentLB',[0,0,800,0.5,0],...
    'ellipseTransparentUB',[640,480,20000,0.75, pi],...
    'cutErrorThreshold',4,...
    };

% Call the pre-processing pipeline
%pupilPipeline(pathParams,videoNameStems(1:6),sessionKeyValues);


%% Analysis parameters -- LEFT EYE STIM

% Mask bounds
glintFrameMask = [211   360   164   184];
pupilFrameMask = [131   241   105   154];

sessionKeyValues = {...
    'checkCountTRs', checkCountTRs, ...
    'glintFrameMask',glintFrameMask,...
    'glintGammaCorrection',1,...
    'glintThreshold',0.5,...
    'pupilGammaCorrection',0.5000,...
    'pupilFrameMask',pupilFrameMask,...
    'pupilRange',[67 82],...
    'pupilCircleThresh',0.1,...
    'glintPatchRadius',50,...
    'candidateThetas',[3*pi/4],...
    'ellipseTransparentLB',[0,0,800,0.3,0],...
    'ellipseTransparentUB',[640,480,20000,0.8, pi],...
    'cutErrorThreshold',4,...
    };

% Call the pre-processing pipeline
pupilPipeline(pathParams,videoNameStems(7:12),sessionKeyValues);


%% Call the frequency fitting pipeline
fourierFitPipeline(pathParams,videoNameStems,sets,labels,durations,freqs);

