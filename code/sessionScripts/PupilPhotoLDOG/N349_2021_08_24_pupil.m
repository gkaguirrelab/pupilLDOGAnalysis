%% N349_2021_08_24_pupil
%
% The video analysis pre-processing pipeline for an LDOG session.
%
% To define mask bounds, use:
%{
	glintFrameMask = defineCropMask('pupil_L+S_01.mov','startFrame',10)
	pupilFrameMask = defineCropMask('pupil_L+S_01.mov','startFrame',10)
%}
% For the glint, put a tight box around the glint. For the pupil, define a
% mask area that safely contains the pupil at its most dilated.


reprocessFlag = false;


%% Session parameters

% Subject and session params.
pathParams.Subject = 'N349';
pathParams.Date = '2021-08-24';
pathParams.Session = '';

% The approach and protocol. These shouldn't change much
pathParams.Approach = 'OLApproach_TrialSequenceMR';
pathParams.Protocol = 'PupilPhotoLDOG';

% The names of the videos to process
videoNameStems = {...
    'pupil_LightFlux_1-6Hz_RightEyeStim_01',...
    'pupil_RodMel_1-6Hz_RightEyeStim_02',...
    'pupil_LplusS_1-6Hz_RightEyeStim_03',...
    'pupil_LightFlux_1-6Hz_LeftEyeStim_04',...
    'pupil_RodMel_1-6Hz_LeftEyeStim_05',...
    'pupil_LplusS_1-6Hz_LeftEyeStim_06',...
    'pupil_LightFlux_1-6Hz_RightEyeStim_07',...
    'pupil_RodMel_1-6Hz_RightEyeStim_08',...
    'pupil_LplusS_1-6Hz_RightEyeStim_09',...
    'pupil_LightFlux_1-6Hz_LeftEyeStim_10',...
    'pupil_RodMel_1-6Hz_LeftEyeStim_11',...
    'pupil_LplusS_1-6Hz_LeftEyeStim_12',...
    };

% Stimulus properties
sets = {[1 7],[2 2],[3 9],[4 10],[11 11], [6, 12]};
labels = {'pupil_LightFlux_1-6Hz_RightEyeStim','pupil_RodMel_1-6Hz_RightEyeStim',...
    'pupil_LplusS_1-6Hz_RightEyeStim', 'pupil_LightFlux_1-6Hz_LeftEyeStim',...
    'pupil_RodMel_1-6Hz_LeftEyeStim', 'pupil_LplusS_1-6Hz_LeftEyeStim'};
durations = [360,360,360,360,360,360];
freqs = [1/6,1/6,1/6,1/6,1/6,1/6];

% There is only one audio TTL pulse
checkCountTRs = [112 112 112 112 112 112 112 112 112 112 112 112];

% Mask bounds
glintFrameMaskSet = {...
    [88   291   348   304], ...
    [98   288   346   317], ...
    [97   287   339   318], ...
    [51   365   294    90], ...
    [39   277   192    39], ...
    [56   295   362   270], ...
    [132   281   308   318], ...
    [68    -1   228   164], ...
    [71   128   169   134], ...
    [49   217   392   385] , ...
    [44   206   393   391], ...
    [41   204   399   400]};
pupilFrameMaskSet = {...
    [66   171   171   209], ...
    [79   160   169   229], ... 
    [78   158   157   215], ... 
    [35   216   160     3], ... 
    [18   194   165   126], ...
    [18   154   171   151], ... 
    [84   154   111   175], ...
    [42     3    85    74], ... 
    [81   114    90   194], ... 
    [37   102   202   256], ... 
    [20    87   205   274], ... 
    [13    80   209   270]}; 

pupilCircleThreshSet = [0.1, 0.1, 0.1, 0.15, 0.15, 0.15, 0.1, 0.2, 0.15, 0.1, 0.1, 0.1];

pupilRangeSets = {[70 110], [70 110], [70 110], [90 180], [80 130], [80 130], [80 130], [80 140], [70 110], [70 110], [70 110], [70 110]};
candidateThetas = {[pi],[pi],[pi],[pi/2],[pi; 3*pi/2],[pi/2],[pi/2],[pi/2],[pi/2],[pi/2],[pi/2],[pi/2]};

ellipseEccenLBUB = {[0.1 0.6],[0.1 0.6],[0.1 0.6],[0.1 0.6],[0.1 0.6],[0.1 0.6],[0.1 0.6],[0.1 0.6],[0.1 0.6],[0.1 0.6],[0.1 0.6],[0.1 0.6],[0.1 0.6],[0.1 0.6],[0.1 0.6],[0.1 0.6]};

glintPatchRadius = [45,45,45,55,55,55,55,55,75,55,55,45];

minRadiusProportion = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];

cutErrorThreshold = [5,5,5,2,2,2,4,2,4,2,2,2];

ellipseAreaLB = [1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000];
ellipseAreaUP = [90000, 90000, 90000, 90000, 90000, 90000, 90000, 90000, 90000, 90000, 90000, 90000];
glintThreshold = [0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.5, 0.4, 0.4, 0.4];

goodGlintFrame = [25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25];
glintGammaCorrection = [0.75,0.75,0.75,0.75,0.85,0.75,0.75,0.55,0.55,0.75,0.75,0.75];
pupilGammaCorrection = [0.65,0.65,0.65,0.50,0.60,0.50,0.50,0.30,0.30,0.30,0.30,0.30];
motionCorrect = [false,false,false,false,true,false,false,false,true,false,false,false];
%% Loop through video name stems get each video and its corresponding masks
vids = [1,2,3,4,5,6,7,8,9,10,11,12];

if reprocessFlag
    for ii = vids
        pupilCircleThresh = pupilCircleThreshSet(ii);
        pupilRange = pupilRangeSets{ii};
        videoName = {videoNameStems{ii}};
        glintFrameMask = glintFrameMaskSet{ii};
        pupilFrameMask = pupilFrameMaskSet{ii};
        % Analysis parameters
        % To adjust these parameters for a given session, use the utility:
        %{
        estimatePipelineParamsGUI('','TOME')
        %}
        % And select one of the raw data .mov files.
        
        sessionKeyValues = {...
            'motionCorrect', motionCorrect(ii), ...
            'goodGlintFrame', goodGlintFrame(ii), ...
            'pupilGammaCorrection', pupilGammaCorrection(ii), ...
            'startFrame',1, ...
            'nFrames', Inf, ...
            'checkCountTRs',checkCountTRs(ii), ...
            'glintFrameMask',glintFrameMask,...
            'glintGammaCorrection',glintGammaCorrection(ii),...
            'glintThreshold',glintThreshold(ii),...
            'pupilFrameMask',pupilFrameMask,...
            'pupilRange',pupilRange,...
            'pupilCircleThresh',pupilCircleThresh,...
            'glintPatchRadius',glintPatchRadius(ii),...
            'candidateThetas',candidateThetas{ii},...
            'cutErrorThreshold',cutErrorThreshold(ii),...
            'radiusDivisions',50,...
            'ellipseTransparentLB',[0,0,ellipseAreaLB(ii), ellipseEccenLBUB{ii}(1), 0],...
            'ellipseTransparentUB',[1280,720,ellipseAreaUP(ii),ellipseEccenLBUB{ii}(2), pi],...
            'minRadiusProportion', minRadiusProportion(ii),...
            };
        
        % Call the pre-processing pipeline
        pupilPipeline(pathParams,videoName,sessionKeyValues);
        
    end
end

%% Call the frequency fitting pipeline
fourierFitPipeline(pathParams,videoNameStems,sets,labels,durations,freqs);

